

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 17 12:51:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 09/02/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0008                     _PORTD	set	8
   168     0010                     _T1CON	set	16
   169     000E                     _TMR1L	set	14
   170     000F                     _TMR1H	set	15
   171     0080                     _TMR1ON	set	128
   172     005E                     _PEIE	set	94
   173     005F                     _GIE	set	95
   174     0060                     _TMR1IF	set	96
   175     0460                     _TMR1IE	set	1120
   176     0440                     _TRISD0	set	1088
   177                           
   178                           	psect	cinit
   179     000F                     start_initialization:	
   180                           ; #config settings
   181                           
   182     000F                     __initialization:
   183                           
   184                           ; Clear objects allocated to COMMON
   185     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   186     0010                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189     0010                     __end_of__initialization:
   190     0010  0183               	clrf	3
   191     0011  120A  118A  2825   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194     0072                     __pbssCOMMON:
   195     0072                     _value:
   196     0072                     	ds	1
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_timerIsr:
   201     0070                     ??_timerIsr:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 2 bytes @ 0x0
   209     0070                     	ds	2
   210     0072                     ??_main:
   211                           
   212                           	psect	maintext
   213     0025                     __pmaintext:	
   214                           ; 1 bytes @ 0x2
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 37 in file "p37.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  2   32[None  ] int 
   227 ;; Registers used:
   228 ;;		wreg
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : B00/0
   232 ;;		Unchanged: 800/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0
   236 ;;      Temps:          0       0       0       0       0
   237 ;;      Totals:         0       0       0       0       0
   238 ;;Total ram usage:        0 bytes
   239 ;; Hardware stack levels required when called: 1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247     0025                     _main:	
   248                           ;psect for function _main
   249                           
   250                           
   251                           ;p37.c: 38: TRISD0 = 0;
   252                           
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg]
   255     0025  1683               	bsf	3,5	;RP0=1, select bank1
   256     0026  1008               	bcf	8,0	;volatile
   257                           
   258                           ;p37.c: 39: T1CON = 0x30;
   259     0027  3030               	movlw	48
   260     0028  1283               	bcf	3,5	;RP0=0, select bank0
   261     0029  0090               	movwf	16	;volatile
   262                           
   263                           ;p37.c: 40: TMR1IE = 1;
   264     002A  1683               	bsf	3,5	;RP0=1, select bank1
   265     002B  140C               	bsf	12,0	;volatile
   266                           
   267                           ;p37.c: 41: GIE = 1;
   268     002C  178B               	bsf	11,7	;volatile
   269                           
   270                           ;p37.c: 42: PEIE = 1;
   271     002D  170B               	bsf	11,6	;volatile
   272                           
   273                           ;p37.c: 43: TMR1ON = 1;
   274     002E  1283               	bcf	3,5	;RP0=0, select bank0
   275     002F  1410               	bsf	16,0	;volatile
   276     0030                     l33:	
   277                           ;p37.c: 45: while(1){
   278                           
   279                           
   280                           ;p37.c: 46: PORTD = value;
   281     0030  0872               	movf	_value,w
   282     0031  0088               	movwf	8	;volatile
   283     0032  2830               	goto	l33
   284     0033                     __end_of_main:
   285                           
   286                           	psect	text1
   287     0014                     __ptext1:	
   288 ;; *************** function _timerIsr *****************
   289 ;; Defined at:
   290 ;;		line 28 in file "p37.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 300/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   304 ;;      Params:         0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0
   306 ;;      Temps:          2       0       0       0       0
   307 ;;      Totals:         2       0       0       0       0
   308 ;;Total ram usage:        2 bytes
   309 ;; Hardware stack levels used: 1
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		Interrupt level 1
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317     0014                     _timerIsr:	
   318                           ;psect for function _timerIsr
   319                           
   320                           
   321                           ;p37.c: 29: if(TMR1IF == 1){
   322     0014  1283               	bcf	3,5	;RP0=0, select bank0
   323     0015  1303               	bcf	3,6	;RP1=0, select bank0
   324     0016  1C0C               	btfss	12,0	;volatile
   325     0017  281E               	goto	i1l28
   326                           
   327                           ;p37.c: 30: value =~ value;
   328     0018  09F2               	comf	_value,f
   329                           
   330                           ;p37.c: 31: TMR1H = 0xCF;
   331     0019  30CF               	movlw	207
   332     001A  008F               	movwf	15	;volatile
   333                           
   334                           ;p37.c: 32: TMR1L = 0x2C;
   335     001B  302C               	movlw	44
   336     001C  008E               	movwf	14	;volatile
   337                           
   338                           ;p37.c: 33: TMR1IF = 0;
   339     001D  100C               	bcf	12,0	;volatile
   340     001E                     i1l28:
   341     001E  0871               	movf	??_timerIsr+1,w
   342     001F  008A               	movwf	10
   343     0020  0E70               	swapf	??_timerIsr,w
   344     0021  0083               	movwf	3
   345     0022  0EFE               	swapf	126,f
   346     0023  0E7E               	swapf	126,w
   347     0024  0009               	retfie
   348     0025                     __end_of_timerIsr:
   349     007E                     btemp	set	126	;btemp
   350     007E                     wtemp0	set	126
   351                           
   352                           	psect	intentry
   353     0004                     __pintentry:	
   354                           ;incstack = 0
   355                           ; Regs used in _timerIsr: [wreg]
   356                           
   357     0004                     interrupt_function:
   358     007E                     saved_w	set	btemp
   359     0004  00FE               	movwf	btemp
   360     0005  0E03               	swapf	3,w
   361     0006  00F0               	movwf	??_timerIsr
   362     0007  080A               	movf	10,w
   363     0008  00F1               	movwf	??_timerIsr+1
   364     0009  120A  118A  2814   	ljmp	_timerIsr
   365                           
   366                           	psect	config
   367                           
   368                           ;Config register CONFIG @ 0x2007
   369                           ;	Oscillator Selection bits
   370                           ;	FOSC = XT, XT oscillator
   371                           ;	Watchdog Timer Enable bit
   372                           ;	WDTE = OFF, WDT disabled
   373                           ;	Power-up Timer Enable bit
   374                           ;	PWRTE = OFF, PWRT disabled
   375                           ;	Brown-out Reset Enable bit
   376                           ;	BOREN = OFF, BOR disabled
   377                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   378                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   379                           ;	Data EEPROM Memory Code Protection bit
   380                           ;	CPD = OFF, Data EEPROM code protection off
   381                           ;	Flash Program Memory Write Enable bits
   382                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   383                           ;	In-Circuit Debugger Mode bit
   384                           ;	DEBUG = 0x1, unprogrammed default
   385                           ;	Flash Program Memory Code Protection bit
   386                           ;	CP = OFF, Code protection off
   387     2007                     	org	8199
   388     2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timerIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timerIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timerIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timerIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timerIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timerIsr                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timerIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 17 12:51:37 2023

                     l33 0030                      _GIE 005F                     _PEIE 005E  
                   i1l28 001E                     _main 0025                     btemp 007E  
                   start 000C                    ?_main 0070                    _T1CON 0010  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTD 0008  
                  _value 0072                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0033  
                 ??_main 0072                   _TMR1IE 0460                   _TMR1IF 0060  
                 _TMR1ON 0080                   _TRISD0 0440         __end_of_timerIsr 0025  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 0025               __pintentry 0004                ?_timerIsr 0070  
                __ptext1 0014     end_of_initialization 0010               ??_timerIsr 0070  
    start_initialization 000F              __pbssCOMMON 0072                ___latbits 0002  
      interrupt_function 0004                 _timerIsr 0014                 intlevel1 0000  
